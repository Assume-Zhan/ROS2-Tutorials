<?xml version='1.0'?>
<sdf version='1.7'>

<model name="car">
    <static>false</static>

    <link name='chassis'>
        <pose>0 0 0.1 0 0 0</pose>

        <collision name='collision'>
            <geometry>
                <box>
                    <size>0.8 0.2 0.1</size>
                </box>
            </geometry>
            <material>
                <ambient>1.0 0.0 0.0 1.0</ambient>
                <diffuse>1.0 0.0 0.0 1.0</diffuse>
                <specular>0.0 0.0 0.0 1.0</specular>
                <emissive>0.0 0.0 0.0 1.0</emissive>
            </material>
        </collision>

        <visual name='visual'>
            <geometry>
                <box>
                    <size>0.8 0.2 0.1</size>
                </box>
            </geometry>
        </visual>

        <collision name='caster_collision'>
            <pose>-0.25 0 -0.05 0 0 0</pose>
            <geometry>
                <sphere>
                    <radius>.05</radius>
                </sphere>
            </geometry>
        
            <surface>
                <friction>
                <ode>
                    <mu>0.01</mu>
                    <mu2>0.01</mu2>
                    <slip1>1.0</slip1>
                    <slip2>1.0</slip2>
                </ode>
                </friction>
            </surface>
        </collision>
 
        <visual name='caster_visual'>
            <pose>-0.25 0 -0.05 0 0 0</pose>
            <geometry>
                <sphere>
                <radius>.05</radius>
                </sphere>
            </geometry>
        </visual>

        <collision name='caster_collision2'>
            <pose>0.25 0 -0.05 0 0 0</pose>
            <geometry>
                <sphere>
                    <radius>.05</radius>
                </sphere>
            </geometry>
        
            <surface>
                <friction>
                <ode>
                    <mu>0.01</mu>
                    <mu2>0.01</mu2>
                    <slip1>1.0</slip1>
                    <slip2>1.0</slip2>
                </ode>
                </friction>
            </surface>
        </collision>
 
        <visual name='caster_visual2'>
            <pose>0.25 0 -0.05 0 0 0</pose>
            <geometry>
                <sphere>
                <radius>.05</radius>
                </sphere>
            </geometry>
        </visual>

    </link>

    <link name="left_wheel">
        <pose>0. 0.13 0.1 0 1.5707 1.5707</pose>
        <collision name="collision">
            <geometry>
            <cylinder>
                <radius>.1</radius>
                <length>.05</length>
            </cylinder>
            </geometry>
        </collision>
        <visual name="visual">
            <geometry>
            <cylinder>
                <radius>.1</radius>
                <length>.05</length>
            </cylinder>
            </geometry>
        </visual>
    </link>

    <link name="right_wheel">
        <pose>0. -0.13 0.1 0 1.5707 1.5707</pose>
        <collision name="collision">
        <geometry>
            <cylinder>
            <radius>.1</radius>
            <length>.05</length>
            </cylinder>
        </geometry>
        </collision>
        <visual name="visual">
        <geometry>
            <cylinder>
            <radius>.1</radius>
            <length>.05</length>
            </cylinder>
        </geometry>
        </visual>
    </link>

    <link name="imu_link">
        <gravity>true</gravity>
        <sensor name="imu" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <imu>
                <orientation>
                <x>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>2e-3</stddev>
                    </noise>
                </x>
                <y>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>2e-3</stddev>
                    </noise>
                </y>
                <z>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>2e-3</stddev>
                    </noise>
                </z>
                </orientation>
                <angular_velocity>
                <x>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    </noise>
                </x>
                <y>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    </noise>
                </y>
                <z>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    </noise>
                </z>
                </angular_velocity>
                <linear_acceleration>
                <x>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    </noise>
                </x>
                <y>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    </noise>
                </y>
                <z>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    </noise>
                </z>
                </linear_acceleration>
            </imu>
            <plugin name="basic_mobile_bot_imu" filename="libgazebo_ros_imu_sensor.so">
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
                <frame_name>imu_link</frame_name>
                <ros>
                    <namespace>/imu</namespace>
                    <remapping>~/out:=data</remapping>
                </ros>
            </plugin>
        </sensor>
    </link>

    <joint type="revolute" name="left_wheel_hinge">
        <pose>0 0 -0.03 0 0 0</pose>
        <child>left_wheel</child>
        <parent>chassis</parent>
        <axis>
            <xyz>0 0 1</xyz>
        </axis>
    </joint>
 
    <joint type="revolute" name="right_wheel_hinge">
        <pose>0 0 0.03 0 0 0</pose>
        <child>right_wheel</child>
        <parent>chassis</parent>
        <axis>
            <xyz>0 0 1</xyz>
        </axis>
    </joint>

    <joint name="imu_joint" type="fixed">
        <child>imu_link</child>
        <parent>chassis</parent>
        <pose>0 0 0 0 0 0</pose>
    </joint>  


    <plugin name="wheel_driver" filename="libgazebo_ros_diff_drive.so">

        <update_rate>30</update_rate>

        <!-- wheels -->
        <left_joint>left_wheel_hinge</left_joint>
        <right_joint>right_wheel_hinge</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.4</wheel_separation>
        <wheel_diameter>0.2</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>20</max_wheel_torque>
        <max_wheel_acceleration>1.0</max_wheel_acceleration>

        <!-- Receive velocity commands on this ROS topic -->
        <command_topic>cmd_vel</command_topic>

        <!-- output -->
        <!-- When false, publish no wheel odometry data to a ROS topic -->
        <publish_odom>true</publish_odom>

        <!-- When true, publish coordinate transform from odom to base_footprint -->
        <publish_odom_tf>true</publish_odom_tf>
        
        <!-- When true, publish coordinate transform from base_link to the wheels -->
        <!-- The robot_state_publisher package is often used to publish this transform -->   
        <publish_wheel_tf>false</publish_wheel_tf>

        <odometry_topic>odom</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_footprint</robot_base_frame>

        <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
        <odometry_source>0</odometry_source>

        <!-- Change the ROS topic we will publish the odometry data to -->

    </plugin>

</model>



</sdf>